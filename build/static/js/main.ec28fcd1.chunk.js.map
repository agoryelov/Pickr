{"version":3,"sources":["../../pickr-dev/src/components/Pages/Landing.js","../../pickr-dev/src/constants/routes.js","../../pickr-dev/src/components/firebase.js","../../pickr-dev/src/components/Pages/SignUp.js","../../pickr-dev/src/components/Pages/SignIn.js","../../pickr-dev/src/components/WIP/SwipeViews.js","../../pickr-dev/src/components/Pages/HomePage.js","../../pickr-dev/src/components/Pages/Badges.js","../../pickr-dev/src/components/Pages/Favourites.js","../../pickr-dev/src/components/Layout/BottomNav.js","../../pickr-dev/src/components/Layout/Header.js","../../pickr-dev/src/components/App/index.js","../../pickr-dev/src/serviceWorker.js","../../pickr-dev/src/index.js"],"names":["Landing","react_default","a","createElement","LANDING","SIGN_IN","HOME","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","Object","classCallCheck","signUp","email","password","auth","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","user","uid","db","ref","concat","users","app","apps","length","initializeApp","database","SignUpFormBase","props","possibleConstructorReturn","getPrototypeOf","call","firebase","onSubmit","event","preventDefault","username","state","then","authUser","set","setState","error","history","push","ROUTES","onChange","defineProperty","target","name","value","isInvalid","type","placeholder","disabled","message","Component","SignUpForm","withRouter","SignUpPage","SignInFormBase","console","log","SignUpLink","react_router_dom","to","SignInForm","SignInPage","SignIn_SignUpLink","styles","padding","minHeight","color","background","MyComponent","lib_default","style","assign","Home","SwipeViews","Badges","Favourites","SimpleBottomNavigation","handleChange","BottomNavigation_default","showLabels","className","bottom","position","width","BottomNavigationAction_default","component","Link","label","icon","Collections_default","Favorite_default","Person_default","React","HeaderAppBar","button","Button_default","onClick","AppBar_default","top","Toolbar_default","IconButton_default","Menu_default","Typography_default","flexGrow","variant","App","_this2","onAuthStateChanged","Header","marginBottom","marginTop","react_router","exact","path","LandingPage","HomePage","BadgesPage","FavouritesPage","BottomNav","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec28fcd1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <h1>Landing</h1>\r\n    <h4>Please Login</h4>\r\n  </div>\r\n);\r\n\r\nexport default Landing;","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const BADGES = '/badges';\r\nexport const FAVS = '/favs';","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDy42LFaZY_R9yYgb5rX-XWkawH-uS3v9w\",\r\n    authDomain: \"pickr-dev.firebaseapp.com\",\r\n    databaseURL: \"https://pickr-dev.firebaseio.com\",\r\n    projectId: \"pickr-dev\",\r\n    storageBucket: \"pickr-dev.appspot.com\",\r\n    messagingSenderId: \"366132552941\",\r\n    appId: \"1:366132552941:web:b7e7fd6aa24ef38f\"\r\n  };\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    if (!app.apps.length) {\r\n        app.initializeApp(config);\r\n    }\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  signUp = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  signIn = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  signOut = () => this.auth.signOut();\r\n\r\n  user = (uid) => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Firebase from '../firebase'\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>Sign Up</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nclass SignUpFormBase extends Component {\r\n\r\n  firebase = new Firebase();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const username = this.state.username;\r\n    const email = this.state.email;\r\n    const password = this.state.password;\r\n    \r\n    this.firebase.signUp(email, password)\r\n    .then((authUser) => {\r\n      this.firebase.user(authUser.user.uid).set({\r\n        username,\r\n        email,\r\n      });\r\n    })\r\n    .then(() => {\r\n      this.setState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n      });\r\n      this.props.history.push(ROUTES.HOME);\r\n    });\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  };\r\n\r\n  render() {\r\n    const username = this.state.username;\r\n    const email = this.state.email;\r\n    const password = this.state.password;\r\n    const error = this.state.error;\r\n\r\n    const isInvalid = username === '' || email === '' || password === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Username\" />\r\n        <input name=\"email\" value={email} onChange={this.onChange} type=\"email\" placeholder=\"Email\" />\r\n        <input name=\"password\" value={password} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\r\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpForm = withRouter(SignUpFormBase);\r\n\r\nexport default SignUpPage;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Firebase from '../firebase'\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Sign In</h1>\r\n    <SignInForm />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nclass SignInFormBase extends Component {\r\n\r\n  firebase = new Firebase();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      error: null,\r\n    }\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const email = this.state.email;\r\n    const password = this.state.password;\r\n    \r\n    this.firebase.signIn(email, password).then(() => {\r\n      console.log('Hello');\r\n      this.props.history.push(ROUTES.HOME);\r\n    });\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  };\r\n\r\n  render() {\r\n    const email = this.state.email;\r\n    const password = this.state.password;\r\n    const error = this.state.error;\r\n\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input name=\"email\" value={email} onChange={this.onChange} type=\"email\" placeholder=\"Email\" />\r\n        <input name=\"password\" value={password} onChange={this.onChange} type=\"password\" placeholder=\"Password\" />\r\n        <button disabled={isInvalid} type=\"submit\">Sign In</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignInForm = withRouter(SignInFormBase);\r\n\r\nexport default SignInPage;","import React from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nconst styles = {\r\n  slide: {\r\n    padding: 15,\r\n    minHeight: 300,\r\n    color: '#fff',\r\n  },\r\n  slide1: {\r\n    background: '#FEA900',\r\n  },\r\n  slide2: {\r\n    background: '#B3DC4A',\r\n  },\r\n  slide3: {\r\n    background: '#6AC0FF',\r\n  },\r\n};\r\n\r\nconst MyComponent = () => (\r\n  <SwipeableViews>\r\n    <div style={Object.assign({}, styles.slide, styles.slide1)}>\r\n      slide n°1\r\n    </div>\r\n    <div style={Object.assign({}, styles.slide, styles.slide2)}>\r\n      slide n°2\r\n    </div>\r\n    <div style={Object.assign({}, styles.slide, styles.slide3)}>\r\n      slide n°3\r\n    </div>\r\n  </SwipeableViews>\r\n);\r\n\r\nexport default MyComponent;","import React from 'react';\r\nimport SwipeViews from '../WIP/SwipeViews'\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Quests</h1>\r\n    <SwipeViews />\r\n  </div>\r\n);\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst Badges = () => (\r\n  <div>\r\n    <h1>Badges Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default Badges;","import React from \"react\";\r\n\r\nconst Favourites = () => (\r\n  <div>\r\n    <h1>Favourites Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default Favourites;","import React from 'react';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CollectionsIcon from '@material-ui/icons/Collections';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass SimpleBottomNavigation extends React.Component {\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n      this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        showLabels\r\n        className=\"nav-root\" \r\n        style={{bottom: '0', color: 'red', position: 'fixed', width: '100%'}}\r\n      >\r\n        <BottomNavigationAction component={Link} to={ROUTES.HOME} label=\"Quests\" icon={<CollectionsIcon />} />\r\n        <BottomNavigationAction component={Link} to={ROUTES.FAVS} label=\"Favourites\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction component={Link} to={ROUTES.BADGES} label=\"Badges\" icon={<PersonIcon />} />\r\n      </BottomNavigation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleBottomNavigation;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport Firebase from '../firebase'\r\n\r\nfunction HeaderAppBar(props) {\r\n\r\n  function logout() {\r\n    const firebase = new Firebase();\r\n    firebase.signOut();\r\n  }\r\n\r\n  let button;\r\n  if (props.authUser) {\r\n    button = <Button component={Link} to={ROUTES.LANDING} onClick={logout} color=\"inherit\">Logout</Button>;\r\n  } else {\r\n    button = <Button component={Link} to={ROUTES.SIGN_IN} color=\"inherit\">Login</Button>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"header-root\">\r\n      <AppBar style={{background: '#18EAAF', position: 'fixed', top: 0}} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className=\"menuButton\" color=\"inherit\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{ flexGrow: '1'}} variant=\"h6\" color=\"inherit\" className=\"grow\">\r\n            PICKR\r\n          </Typography>\r\n          {button}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderAppBar;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from '../Pages/Landing';\r\nimport SignUpPage from '../Pages/SignUp';\r\nimport SignInPage from '../Pages/SignIn';\r\nimport HomePage from '../Pages/HomePage';\r\nimport BadgesPage from '../Pages/Badges';\r\nimport FavouritesPage from '../Pages/Favourites';\r\n\r\nimport BottomNav from '../Layout/BottomNav';\r\nimport HeaderAppBar from '../Layout/Header'\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Firebase from '../firebase'\r\n\r\nclass App extends Component {\r\n    firebase = new Firebase();\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authUser: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.firebase.auth.onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                this.setState({ authUser });\r\n            } else {\r\n                this.setState({ authUser: null });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n              <Router>\r\n                <HeaderAppBar authUser={this.state.authUser} />\r\n                <div style={{marginBottom: '100px', marginTop: '75px'}}>\r\n                    <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n                    <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n                    <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n                    <Route path={ROUTES.HOME} component={HomePage} />\r\n                    <Route path={ROUTES.BADGES} component={BadgesPage} />\r\n                    <Route path={ROUTES.FAVS} component={FavouritesPage} />\r\n                </div>\r\n                <BottomNav />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}